#!/bin/bash

## Reset various config files

# Test command parameters
compile=1
resartserv=1
clearcahes=1
buildassests=1
showhelp=0
for i in "$@"
do
case $i in
	--no-compile) compile=0
	;;
	--no-restart) resartserv=0
	;;
	--no-clear) clearcahes=0
	;;
	--no-assets) buildassests=0
	;;
    --help) showhelp=1
    ;;
	*)  echo "Unknown command line: $i"
    ;;
esac
done

# Show help text
if [ $showhelp = 1 ]; then
    echo ""
    echo "DESCRIPTION:"
    echo "Checks-out all modules of a specified branch. If a module does not exist locally then it will be cloned"
    echo ""
    echo "usage: $0 <branch> [--help] [--force | -f] [--no-migrate | -n] [--kill-modules | -ff ] [--no-compile] [-r <remote>] [--no-summary] [--develop | -d] [-u<username>]  [-p<password>]"
    echo ""
    echo "COMMAND OPTIONS:"
	echo ""
	echo "  --help         : Show this help"
    echo "  --no-compile   : Do not complile java modules"
	echo "  --no-restart   : Do not restart services"
	echo "  --no-clear     : Do not clear caches"
	echo "  --no-assets    : Do not (re)build assets)"
	echo ""
    exit 1
fi

source /etc/openeyes/env.conf

cd /var/www/openeyes
if [ -f ".htaccess.sample" ]; then
echo Renaming .htaccess file
mv .htaccess.sample .htaccess
if [ ! "$env" = "VAGRANT" ]; then chown -R www-data:www-data .htaccess; fi
fi

if [ -f "index.example.php" ]; then
echo Renaming index.php file
mv index.example.php index.php
if [ ! "$env" = "VAGRANT" ]; then chown -R www-data:www-data index.php; fi
fi

if [ ! -d "protected/config/local" ]; then
	echo "WARNING: this code branch uses db settings from common.php, not /etc/openeyes"
	mv protected/config/local.sample protected/config/local
	mv protected/config/local/common.sample.php protected/config/local/common.php
	if [ ! "$envtype" = "VAGRANT" ]; then chown -R www-data:www-data protected/config/local; fi
	chmod -R 775 protected/config/local
	# When using old oe versions, overwirte password in commpon.php to use new default usermname/password
	sed -i "s/'username' => 'root',/'username' => 'openeyes',/" /var/www/openeyes/protected/config/local/common.php
	sed -i "s/'password' => '',/'password' => 'openeyes',/" /var/www/openeyes/protected/config/local/common.php
fi;

# Make sure yii framework found/linked
rm "/var/www/openeyes/vendor/yiisoft/yii" 2>/dev/null || :
mkdir -p /var/www/openeyes/vendor/yiisoft
if [ ! "$envtype" = "VAGRANT" ]; then chown -R www-data:www-data /var/www/openeyes/vendor; fi

if [ -d "/usr/lib/openeyes/yii" ]; then
	# v1.12+
	echo "Linking Yii framework to /usr/lib/openeyes/yii"
	ln -s /usr/lib/openeyes/yii /var/www/openeyes/vendor/yiisoft/yii
else
	#fix for pre v1.12
	echo "Linking Yii framework to /var/www/openeyes/protected/yii"
	ln -s /var/www/openeyes/protected/yii /var/www/openeyes/vendor/yiisoft/yii
fi


# Make sure vendor directory found/linked
if [ ! -d "/var/www/openeyes/protected/vendors" ]; then
	echo Linking vendor framework
	ln -s /usr/lib/openeyes/vendors /var/www/openeyes/protected/vendors
	chown -R www-data:www-data /var/www/openeyes/protected/vendors 2>/dev/null || :
	if [ ! $? = 0 ]; then echo "unable to link vendors - this is expected for versions prior to v1.12"; fi
fi

## (re)-link dist directory for IOLMasterImport module and recompile
dwservrunning=0
# first check if service is running - if it is we stop it, then re-start at the end
if ps ax | grep -v grep | grep run-dicom-service.sh > /dev/null
	then
		dwservrunning=1
		echo "Stopping dicom-file-watcher..."
		service dicom-file-watcher stop
fi

cd /var/www/openeyes/protected/javamodules/IOLMasterImport
rm "/var/www/openeyes/protected/javamodules/IOLMasterImport/dist/lib" 2>/dev/null || :
ln -s ./lib ./dist/lib
if [ ! $? = 0 ]; then echo "Failure is expeced in pre v1.12 releases (where IOLMasterImport does not exist)"; fi

# Compile IOLImporter
##TODO: When we have more java modules, replace with a generic compilation model
if [ $compile = 1 ]; then
  echo "
  Compiling IOLMAsterImport. Please wait....
  "
  ./compile.sh > /dev/null 2>&1
  if [ ! $? = 0 ]; then echo "Failure is expeced in pre v1.12 releases (where IOLMasterImport does not exist)"; fi
fi

# restart the service if we stopped it
if [ $dwservrunning = 1 ] && [ $resartserv = 1 ]; then
	echo "Restarting dicom-file-watcher..."
	service dicom-file-watcher start
fi

# Clear caches
if [ $clearcahes = 1 ]; then
	echo "Clearing caches..."
	rm -rf /var/www/openeyes/protected/runtime/cache/* 2>/dev/null || :
	rm -rf /var/www/openeyes/assets/* 2>/dev/null || :
	echo ""
fi

if [ $buildassests = 1 ]; then
	echo "(re)building assets..."
	# use curl to ping the login page - forces php/apache to rebuild the assets directory
	curl -s http://localhost/site/login > /dev/null
fi

echo ""
echo "...Done"
echo ""
